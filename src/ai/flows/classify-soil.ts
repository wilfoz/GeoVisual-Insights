// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview Soil type classification and surface water identification flow.
 *
 * - classifySoil - A function that handles the soil classification process.
 * - ClassifySoilInput - The input type for the classifySoil function.
 * - ClassifySoilOutput - The return type for the classifySoil function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ClassifySoilInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      "A photo of the area, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
  locationContext: z.string().describe('The city, state and nearby locations.'),
});
export type ClassifySoilInput = z.infer<typeof ClassifySoilInputSchema>;

const ClassifySoilOutputSchema = z.object({
  soilType: z
    .string()
    .describe('The classification of the soil type (rocky, sandy, clay, etc.).'),
  surfaceWater: z.boolean().describe('Whether surface water is present or not.'),
  confidence: z.number().describe('Confidence level of the soil type classification (0-1).'),
  reasoning: z.string().describe('Reasoning behind the classification.'),
});
export type ClassifySoilOutput = z.infer<typeof ClassifySoilOutputSchema>;

export async function classifySoil(input: ClassifySoilInput): Promise<ClassifySoilOutput> {
  return classifySoilFlow(input);
}

const prompt = ai.definePrompt({
  name: 'classifySoilPrompt',
  input: {schema: ClassifySoilInputSchema},
  output: {schema: ClassifySoilOutputSchema},
  prompt: `You are an expert in soil science and remote sensing. Analyze the provided image to classify the soil type and identify the presence of surface water. You will also consider the location context provided.

Analyze the following image:
{{media url=photoDataUri}}

Location Context: {{{locationContext}}}

Based on your analysis, provide the soil type classification (rocky, sandy, clay, etc.), indicate whether surface water is present, a confidence level, and explain your reasoning.

Ensure that the soilType is very descriptive and the reasoning is easy to follow for a non-expert.

Format your output as a JSON object.
`,
});

const classifySoilFlow = ai.defineFlow(
  {
    name: 'classifySoilFlow',
    inputSchema: ClassifySoilInputSchema,
    outputSchema: ClassifySoilOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
