// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Analyzes the proximity of infrastructure to geographical features.
 *
 * - analyzeProximity - A function that analyzes the proximity of infrastructure to geographical features.
 * - AnalyzeProximityInput - The input type for the analyzeProximity function.
 * - AnalyzeProximityOutput - The return type for the analyzeProximity function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeProximityInputSchema = z.object({
  infrastructure: z
    .string()
    .describe('Description of the detected infrastructure (roads, buildings, etc.).'),
  geographicalFeatures: z
    .string()
    .describe('Description of the geographical features (rivers, vegetation, etc.).'),
});
export type AnalyzeProximityInput = z.infer<typeof AnalyzeProximityInputSchema>;

const AnalyzeProximityOutputSchema = z.object({
  analysis: z
    .string()
    .describe(
      'An analysis of the proximity of the infrastructure to the geographical features, including potential impacts and relationships.'
    ),
});
export type AnalyzeProximityOutput = z.infer<typeof AnalyzeProximityOutputSchema>;

export async function analyzeProximity(input: AnalyzeProximityInput): Promise<AnalyzeProximityOutput> {
  return analyzeProximityFlow(input);
}

const analyzeProximityPrompt = ai.definePrompt({
  name: 'analyzeProximityPrompt',
  input: {schema: AnalyzeProximityInputSchema},
  output: {schema: AnalyzeProximityOutputSchema},
  prompt: `You are an expert in geographical analysis.

You will analyze the proximity of detected infrastructure to other geographical features and provide a contextual analysis.

Infrastructure: {{{infrastructure}}}
Geographical Features: {{{geographicalFeatures}}}

Analyze the proximity and describe any potential impacts or relationships.`,
});

const analyzeProximityFlow = ai.defineFlow(
  {
    name: 'analyzeProximityFlow',
    inputSchema: AnalyzeProximityInputSchema,
    outputSchema: AnalyzeProximityOutputSchema,
  },
  async input => {
    const {output} = await analyzeProximityPrompt(input);
    return output!;
  }
);
